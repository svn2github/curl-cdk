||| Copyright (C) 1998-2007, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

{curl 6.0 applet}
{applet manifest = "../manifest.mcurl",
    {compiler-directives careful? = true}}
{import * from COM.CURL.CDK.SQLITE}
{import * from CURL.LANGUAGE.REGEXP}

{value
    def db = {SQLiteDatabase null}
    
    {db.execute "CREATE TABLE words (word TEXT NOT NULL PRIMARY KEY);"}
    {SQLiteStatement.import-csv db, "words", {url "Nouns.txt"}}

    def matchers =
        {{Memoizer-of String, Matcher}
            {proc {pattern:String}:Matcher
                ||{output "new matcher"}
                {return
                    {Matcher pattern}}}}

    {db.install-function "regexp", 2,
        {proc {pattern:String, string:String}:int
            || get matcher
            def m = matchers[pattern]
            || call matcher
            def match? = {m.match string} != null
            || return result
            {return {if match? then 1 else 0}}
        }}

    def display = 
        {RecordGrid
            width = {add-stretch}, 
            height = {add-stretch}}
    
    def sample-query = "SELECT * FROM words WHERE word REGEXP '^a.+a$'"
    || SELECT * FROM words WHERE word REGEXP '^(.{2,}).*\1$'
    
    {VBox width = 6in, height = 4in,
        {HBox 
            {ComboBox vorigin = 70%,
                width = 6in,
                sample-query,
                {on ValueFinished at c:ComboBox do
                    {with-busy-cursor
                        def q = c.value asa String
                        {try
                            def rs = {SQLiteBasicRecordSet db, q}
                            set display.record-source = rs
                            {if {c.find q} < 0 then
                                {c.append q}}
                         catch e:Exception do
                            {popup-message title = "SQL error", e}}}},
                {on AttachEvent at c:ComboBox do
                    {c.set-value-with-events sample-query}}},
            {Fill}},
        {hrule},
        display}
}
