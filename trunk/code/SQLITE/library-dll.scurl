||| Copyright (C) 1998-2007, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

{define-proc public {http-url? loc:Url}:bool
    {return
        {loc.stem.name.prefix? "http"}}
}
{define-proc public {user-data-copy-of
                        loc:Url,
                        path:String
                    }:Url
    {if not {http-url? loc} then
        {return loc}}
    def uloc = "curl://user-data/" & path
    def cloc = {{url uloc}.canonicalize}
    def file = {cloc.concat loc.filename}
    {if not {local-file-exists? file} then
        {create-Directory cloc,
            create-missing-parents? = true,
            error-if-exists? = false}
        {with-open-streams 
            out = {write-open-byte file},
            in = {read-open-byte loc}
         do
            {in.copy-out out}
        }
    }
    {return file}
}
{define-proc {local-SharedLibrary name:String}:SharedLibrary
    || manifest specifies library location
    || - qualified by platform
    def mloc =
        {platform-switch
         case "win32" do
            {manifest-url "file", name,
                platform = "win32"}
         case "linux" do
            {manifest-url "file", name,
                platform = "linux"}
         else
            || TODO: for MAC also
            {error {lmessage SharedLibrary {value name} not available for this platform platform.}}
        }
    || if HTTP, copy library to LocalFile
    def loc = 
        {if {http-url? mloc} then
            || TODO: dguide recommends "curl://common/"
            {user-data-copy-of mloc, name}
         else mloc}
    {return 
        {SharedLibrary.from-url loc}}
}
