||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

|| Wait for the right time to get results of invoking methods.
{define-class abstract public TimingMeans
  
  field private pending?:bool
  def TIMEOUT = 150

  {constructor public {default}
    set self.pending? = false
  }

  {method public open {start-with-idling args:Arguments}:void
    set self.pending? = true
    {self.exe args}
    let cnt:int = 0
    {while self.pending? do
        {dispatch-events true}
        {inc cnt}
        {if cnt > TimingMeans.TIMEOUT then
            set self.pending? = false
        }
    }
  }

  {method abstract protected {exe args:Arguments}:void}

  {method public open {end-idling}:void
    set self.pending? = false
  }
}

