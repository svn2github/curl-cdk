||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

{define-class public ErrorMessage {inherits AcknowledgeMessage}
 
  def public traits =
      {DataObjectTraits
        "flex.messaging.messages.ErrorMessage", ||""
        dynamic? = false,
        {StringArray
            ||""((
            "headers",
            "rootCause",
            "body",
            "correlationId",
            "faultDetail",
            "faultString",
            "clientId",
            "timeToLive",
            "destination",
            "timestamp",
            "extendedData",
            "faultCode",
            "messageId",
            "code" || Not in many of the descriptions of the format, but seems to be used.
            ||""))
        }
      }

  field public extended-data:any
  field public fault-code:#String
  field public fault-detail:#String
  field public fault-string:#String
  field public root-cause:any
  field public code:#String

  ||""((
  let public constant MESSAGE_DELIVERY_IN_DOUBT:String =
      "Client.Error.DeliveryInDoubt"
  let public constant RETRYABLE_HINT_HEADER:String = "DSRetryableErrorHint"
  ||""))

  {constructor public {default}
    {construct-super}
  }
}
