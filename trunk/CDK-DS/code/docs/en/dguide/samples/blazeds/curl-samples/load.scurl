||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

{curl 7.0 package}

{package COM.CURL.CDK.SAMPLES-SUPPORT}

{import * from CURL.GUI.STANDARD}
{import * from CURL.GUI.CONTROL-HELPERS}

{define-text-proc public {clink
                             target:String = "_self",
                             href:#Url = null,
                             ...
                         }:any
    {return
        {link href = href,
            {text color = "#4866ac", {splice ...}}}
    }
}

{let current-pointer-record:#Record}

{define-class public PointerHandlerRecordGridCell
  {inherits StandardRecordGridCell}

  field protected string-graphic:StringGraphic

  {constructor public {default}
    {construct-super}

    set self.string-graphic = 
        {StringGraphic 
            "", 
            width = {add-stretch},
            height = 22px,
            vorigin = 0.0,
            horigin = 0.0,
            halign = self.halign,
            margin = 2px
        }
    {self.add-internal self.string-graphic}

    {self.add-event-handler
        {on e:PointerEnter do
            {if-non-null rg = self.grid then
                set current-pointer-record = self.record
                set rg.row-background-spec = row-background
            }
        }
    }
    {self.add-event-handler
        {on e:PointerLeave do
            {if-non-null rg = self.grid then
                set current-pointer-record = null
                {unset rg.row-background-spec}
            }
        }
    }
  }

  {method public {refresh-data}:void
    let (data:String, valid?:bool) = {self.get-formatted-data}
    {if valid? then
        set self.string-graphic.contents = data
    }
    {super.refresh-data}
  }
}

{define-proc public {row-background rg:RecordGrid, r:Record, i:int}:#Background
    {if r == current-pointer-record then
        {return {Background.from-string "#b2e1ff"}}
     else
        {return null}
    }
}

{define-class public DisplayFrame {inherits Frame}
  {local-option public value:any
    {self.refresh-display}
  }
  {constructor public {default ...}
    {construct-super
        _style-element = "DisplayFrame",
        {splice ...}
    }
  }
  {method {refresh-display}:void
    {self.clear}
    {if-non-null v = self.value then
        {self.add v}
    }
  }
}
