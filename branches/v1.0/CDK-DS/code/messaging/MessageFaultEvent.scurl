||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

{define-class public MessageFaultEvent {inherits Event}
  field public type:String
  field public bubbles?:bool
  field public cancelable?:bool
  field public message:#ErrorMessage
  field public root-cause:any

  let public constant FAULT:String = "fault"

  {constructor public {default
                          type:String,
                          bubbles?:bool = false,
                          cancelable?:bool = false,
                          message:#ErrorMessage = null
                      }
    {construct-super}
    set self.type = type
    set self.bubbles? = bubbles?
    set self.cancelable? = cancelable?
    set self.message = message
  }

  {getter public {fault-code}:#String
    {return self.message.fault-code}
  }

  {getter public {fault-string}:#String
    {return self.message.fault-string}
  }

  {getter public {fault-detail}:#String
    {return self.message.fault-detail}
  }

  {method public {clone}:Event
    {return
        {new MessageFaultEvent,
            self.type,
            bubbles? = self.bubbles?,
            cancelable? = self.cancelable?,
            message = self.message
        }
    }
  }

  {method public {to-String}:String
    {return {format "%s", self}}
  }
}
