||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

{define-class public HttpChannel {inherits PollingChannel}
  field private protocol:String = "http"

  {constructor public {default id:#String = null, uri:#Url = null}
    {construct-super id = id, uri = uri}
  }

  {getter public {polling?}:bool
    {return self.poll-outstanding?}
  }

  {method public {enable-polling}:void
  }

  {method public {poll}:void
  }

  {method protected {internal-connect}:void
    def message = {new CommandMessage}
    {if-non-null self.credentials then
        set message.operation = CommandMessage.LOGIN_OPERATION
        set message.body = self.credentials
     else
        set message.operation = CommandMessage.CLIENT_PING_OPERATION
    }

    set message.headers[CommandMessage.MESSAGING_VERSION] =
        self.messaging-version

    {if {ServerConfig.needs-config? self} then
        set message.headers[CommandMessage.NEEDS_CONFIG_HEADER] = true
    }

    {self.set-flex-client-id-on-message message}

||--    var urlRequest:URLRequest = createURLRequest(msg);
||--    _connectLoader = new ChannelRequestLoader();
||--    _connectLoader.setErrorCallbacks(pingErrorHandler);
||--    _connectLoader.completeCallback = pingCompleteHandler;
||--    _connectLoader.load(urlRequest);
  }

  {method protected {internal-send message-responder:MessageResponder}:void
    || TODO:
  }

}
