||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

{define-class public Operation {inherits AbstractOperation}
  field public argument-names:#StringArray

  {constructor public {default
                          remote-object:#AbstractService = null,
                          name:#String = null
                      }
    {construct-super service = remote-object, name = name}
  }

  {method public {send ...:any}:#AsyncToken
    def args = {new {Array-of any}, {splice ...}}
    {if-non-null self-arguments = self.arguments then
        {if args.empty? and self-arguments.size > 0 then
            {for arg in self-arguments do
                {args.append arg}
            }
        }
    }
    def remoting-message = {new RemotingMessage}
    set remoting-message.operation = self.name
    set remoting-message.body = args
    {type-switch self.service
     case ro:RemoteObject do
        set remoting-message.source = ro.source
    }
    {return {self.invoke remoting-message}}
  }
}
