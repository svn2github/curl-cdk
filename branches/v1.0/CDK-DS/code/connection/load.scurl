||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

{curl 6.0 package}

{package COM.CURL.CDK.CONNECTION,
    version = "0.1",
    {compiler-directives careful? = true},
    translations-file = "messages.xml",
    resource-directory = "../resources/",
    default-locale = "en"
}

{import * from CURL.GUI.STANDARD}
{import * from COM.CURL.CDK.AMF}
{import * from COM.CURL.CDK.MESSAGES}

{include
    "ConnectionResponder.scurl",
    "CurlConnection.scurl"
}

|| gzip support
{import * from CURL.IO.ZSTREAM}
{define-proc {zstream-for in:HttpByteInputStream}:ByteInputStream
    let (enc:String, enc?:bool) = 
        {in.response-headers.get-if-exists "Content-Encoding"}
    {return
        {if enc? then
            {InflateByteInputStream in,
                compression-format = 
                    {switch enc
                     case "gzip" do CompressionFormat.gzip
                     case "deflate" do CompressionFormat.zlib
                     else {error {message Unexpected HTTP Content-Encoding: {value enc}}}}}
         else in}}
}
