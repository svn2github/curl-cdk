||| Copyright (C) 1998-2008, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

{define-class public AcknowledgeMessage {inherits AsyncMessage}
  let public constant ERROR_HINT_HEADER:String = "DSErrorHint"

  {constructor public {default}
    {construct-super}
  }

  || A convenience method for deserializing externalizable AcknowledgeMessages.
  {method public {read-external deserializer:AMFDeserializer}:void
    {super.read-external deserializer}
    def flags-array = {AbstractMessage.read-flags deserializer.input}
    {for flags key i in flags-array do
        let reserved-position:uint8 = 0
        {if {bit-srl flags, reserved-position} != 0 then
            {for j = reserved-position below 6 do
                {if {bit-and {bit-srl flags, j}, 1} != 0 then
                    {deserializer.read-one}
                }
            }
        }
    }
  }

  {method public {write-external serializer:AMFSerializer}:void
    {super.write-external serializer}

    let flags:byte = 0
    {serializer.output.write-one flags}
  }
}
